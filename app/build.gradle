plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    def app_id = "app.kidswarmup"
    def ver_sdk_target = 30  // 10
    def ver_sdk_min = 25  // 7.1.2
    def ver_major = 1
    def ver_minor = 0
    def ver_patch = 0

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def task_clean = 0
        def build_type = 0
        List<String> runTasks = gradle.startParameter.getTaskNames();
        for (String item : runTasks) {
            if (item.contains("clean"))
                task_clean = 1
            if (item.contains("assembleDebug"))
                build_type = 1
            if (item.contains("assembleRelease"))
                build_type = 2
        }
        ver_major = versionProps['VERSION_MAJOR'].toInteger()
        ver_minor = versionProps['VERSION_MINOR'].toInteger()
        ver_patch = versionProps['VERSION_PATCH'].toInteger()
        if (task_clean > 0 && build_type > 0) {
            ver_patch += 1
            versionProps['VERSION_PATCH'] = ver_patch.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (output.outputFile != null) {
                    def apk_name = "KidsWarmUp-${ver_major}-${ver_minor}-${ver_patch}"
                    if (output.outputFile.name == "app-debug.apk")
                        apk_name += "-debug"
                    outputFileName = apk_name + ".apk"
                }
            }
        }
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

    defaultConfig {
        applicationId app_id
        minSdkVersion ver_sdk_min
        targetSdkVersion ver_sdk_target
        versionCode ver_major * 1000000 + ver_minor * 10000 + ver_patch
        versionName ver_major + "." + ver_minor + "." + ver_patch

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
            //options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.core:core:1.5.0-alpha04'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}